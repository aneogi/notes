
##### Chapter 12 #####

# text file  format
$ view /etc/hive/conf/hive-site.xml

    <property>
      <name>hive.metastore.warehouse.dir</name>
      <value>/apps/hive/warehouse</value>
    </property>

$ hive
create database neogia01_retail_db_txt;
use neogia01_retail_db_txt;

show databases;

create table orders (
order_id int,
order_date string,
order_customer_id int,
order_status string
)row format delimited fields terminated by ','
stored as textfile;

show tables;

load data local inpath '/data/retail_db/orders' into table orders;
dfs -ls /apps/hive/warehouse/neogia01_retail_db_txt.db/orders;
select * from orders limit 10;

create table order_items (
order_item_id int,
order_item_order_id int,
order_item_product_id int,
order_item_quantity int,
order_item_subtotal float,
order_item_product_price float
)row format delimited fields terminated by ','
stored as textfile;

load data local inpath '/data/retail_db/order_items' into table order_items;
dfs -ls /apps/hive/warehouse/neogia01_retail_db_txt.db/order_items;
select * from order_items limit 10;

# orc file format

$ hive
create database neogia01_retail_db_orc;
use neogia01_retail_db_orc;

show databases;

create table orders (
order_id int,
order_date string,
order_customer_id int,
order_status string
)stored as orc;

create table order_items (
order_item_id int,
order_item_order_id int,
order_item_product_id int,
order_item_quantity int,
order_item_subtotal float,
order_item_product_price float
)stored as orc;

describe orders;
describe formatted orders;

dfs -ls hdfs://nn01.itversity.com:8020/apps/hive/warehouse/neogia01_retail_db_orc.db/orders;

insert into table orders select * from neogia01_retail_db_txt.orders;

insert into table order_items select * from neogia01_retail_db_txt.order_items;


# Executing hive from spark

$ pyspark --master yarn --conf spark.ui.port=12562 --executor-memory 2G --num-executors 1

sqlContext.sql("use neogia01_retail_db_txt")
sqlContext.sql("describe formatted orders").show()
for i in sqlContext.sql("describe formatted orders").collect():print(i)
sqlContext.sql("select * from orders limit 10").show()


# Functions

describe function length;
select length('Hello WOrld');
select length(order_status) from orders limit 100;
select order_status, length(order_status) from orders limit 100;

create table customers(
customer_id int,
customer_fname varchar(45),
customer_lname varchar(45),
customer_email varchar(45),
customer_password varchar(45),
customer_street varchar(225),
customer_city varchar(45),
customer_state varchar(45),
customer_zipcode varchar(45)
)row format delimited fields terminated by ','
stored as textfile;

load data local inpath '/data/retail_db/customers' into table customers;

select substr('Hello World, How are you', 14);
select substr('Hello World, How are you', -7, 3);
select instr('Hello World, How are you', ' ');
select 'Hello World, How are you' like 'Hello%';
select 'Hello World, How are you' like '%World%';
select 'Hello World, How are you' rlike 'World';
select lcase('Hello'), ucase('Hello'), initcap('hello');
select length(' Hello World '), length(trim(' Hello World '));
select lpad(12,5,'$'), rpad(12,5,'#');
select cast(" 12 " as int);
select cast(substr(order_date, 6, 2) as int) from orders;
select cast("Hello" as int);
	==> NULL
select split("Hello World, How are you", " ");
select index(split("Hello World, How are you", " "), 4);

select current_date;
select current_timestamp;
select date_format(current_date, 'y'), date_format(current_date, 'm'), date_format(current_date, 'd');
select dayofmonth(current_date);
select to_unix_timestamp(current_date);

select sum(order_item_subtotal) from order_items;
select order_status, count(1) from orders group by order_status;

select distinct order_status from orders;

select order_status,
case order_status
when 'CLOSED' then 'No Action'
when 'COMPLETE' then 'No Action'
when 'ON_HOLD' then 'Pending Action'
when 'PAYMENT_REVIEW' then 'Pending Action'
when 'PENDING' then 'Pending Action'
when 'PROCESSING' then 'Pending Action'
when 'PENDING_PAYMENT' then 'Pending Action'
else 'Risky'
end
from orders limit 100;

select order_status,
case 
when order_status in ('CLOSED','COMPLETE') then 'No Action'
when order_status in ('ON_HOLD', 'PAYMENT_REVIEW', 'PENDING', 'PROCESSING', 'PENDING_PAYMENT') then 'Pending Action'
else 'Risky'
end
from orders limit 100;

select nvl(order_status, 'Status Missing') where order_status is null from orders limit 100;
select concat(substr(order_date, 1, 4), substr(order_date, 6, 2)) from orders limit 10;
select order_date, cast(concat(substr(order_date, 1, 4), substr(order_date, 6, 2)) as int) from orders limit 10;
select cast(date_format('2013-07-25 00:00:00.0', 'YYYYMM') as int);
select distinct cast(date_format(order_date, 'YYYYMM') as int) from orders limit 100;

select * from orders o, customers c where o.order_customer_id = c.customer_id;



