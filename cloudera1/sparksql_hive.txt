
##### Chapter 12 #####

# text file  format
$ view /etc/hive/conf/hive-site.xml

    <property>
      <name>hive.metastore.warehouse.dir</name>
      <value>/apps/hive/warehouse</value>
    </property>

$ hive
create database neogia01_retail_db_txt;
use neogia01_retail_db_txt;

show databases;

create table orders (
order_id int,
order_date string,
order_customer_id int,
order_status string
)row format delimited fields terminated by ','
stored as textfile;

show tables;

load data local inpath '/data/retail_db/orders' into table orders;
dfs -ls /apps/hive/warehouse/neogia01_retail_db_txt.db/orders;
select * from orders limit 10;

create table order_items (
order_item_id int,
order_item_order_id int,
order_item_product_id int,
order_item_quantity int,
order_item_subtotal float,
order_item_product_price float
)row format delimited fields terminated by ','
stored as textfile;

load data local inpath '/data/retail_db/order_items' into table order_items;
dfs -ls /apps/hive/warehouse/neogia01_retail_db_txt.db/order_items;
select * from order_items limit 10;

# orc file format

$ hive
create database neogia01_retail_db_orc;
use neogia01_retail_db_orc;

show databases;

create table orders (
order_id int,
order_date string,
order_customer_id int,
order_status string
)stored as orc;

create table order_items (
order_item_id int,
order_item_order_id int,
order_item_product_id int,
order_item_quantity int,
order_item_subtotal float,
order_item_product_price float
)stored as orc;

describe orders;
describe formatted orders;

dfs -ls hdfs://nn01.itversity.com:8020/apps/hive/warehouse/neogia01_retail_db_orc.db/orders;

insert into table orders select * from neogia01_retail_db_txt.orders;

insert into table order_items select * from neogia01_retail_db_txt.order_items;


#Executing hive from spark

$ pyspark --master yarn --conf spark.ui.port=12562 --executor-memory 2G --num-executors 1

sqlContext.sql("use neogia01_retail_db_txt")
sqlContext.sql("describe formatted orders").show()
for i in sqlContext.sql("describe formatted orders").collect():print(i)
sqlContext.sql("select * from orders limit 10").show()

 
